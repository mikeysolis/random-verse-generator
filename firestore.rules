rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /{document=**} {
      allow read, write: if false;
    }
    
    match /users/{userId} {
    	allow read, create, update: if isSignedIn() && isOwner(userId);

      match /categories/{categoryId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }

      match /favorites/{favoriteId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isValidNewCategory() {
      let category = request.resource.data;
      let isOwner = category.uid == request.auth.uid;
      let hasRequiredFields = category.keys().hasAll(['id', 'name', 'count']);

      return isOwner && hasRequiredFields;
    }
    
  }
}